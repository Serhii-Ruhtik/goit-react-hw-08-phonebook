{"version":3,"file":"static/js/139.f327d3b1.chunk.js","mappings":"4OAGO,MAAMA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAOxBC,EAAQJ,EAAAA,EAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gHAQpBI,EAAQP,EAAAA,EAAOQ,MAAKC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mPAapBO,GAAYV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAaY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,mPAazBU,EAASb,EAAAA,EAAOc,OAAMC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kpBA8BtBa,EAAShB,EAAAA,EAAOc,OAAMG,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,ykB,8ECvE5B,MAAMC,EAAQJ,EAAAA,EAAOK,MAAKH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4NAepBI,GAAQP,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uY,mICTlC,MAAMe,EAAgB,CACpBC,KAAM,GACNC,SAAU,GACVC,MAAO,IAoDT,EAjDqBC,KACnB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,IAAYC,EAAAA,IAK9B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAAAC,UACRF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAACb,cAAeA,EAAec,SANrBC,CAAAC,EAA4BC,KAAa,IAAxC,KAAEhB,EAAI,SAAEC,EAAQ,MAAEC,GAAOa,EAC7CX,GAASa,EAAAA,EAAAA,IAAa,CAAEjB,OAAME,QAAOD,cACrCe,EAAQE,WAAW,EAI4CP,UAC3DQ,EAAAA,EAAAA,MAACrC,EAAAA,GAAI,CAAA6B,SAAA,EACHQ,EAAAA,EAAAA,MAAClC,EAAAA,EAAK,CAAA0B,SAAA,CAAC,SAELF,EAAAA,EAAAA,KAACrB,EAAAA,EAAK,CACJgC,KAAK,QACLpB,KAAK,QACLqB,UAAQ,EACRC,YAAY,mBACZC,aAAa,WAGjBJ,EAAAA,EAAAA,MAAClC,EAAAA,EAAK,CAAA0B,SAAA,CAAC,SAELF,EAAAA,EAAAA,KAACrB,EAAAA,EAAK,CACJgC,KAAK,OACLpB,KAAK,OACLqB,UAAQ,EACRC,YAAY,mBACZC,aAAa,WAGjBJ,EAAAA,EAAAA,MAAClC,EAAAA,EAAK,CAAA0B,SAAA,CAAC,YAELF,EAAAA,EAAAA,KAACrB,EAAAA,EAAK,CACJgC,KAAK,WACLpB,KAAK,WACLqB,UAAQ,EACRC,YAAY,sBACZC,aAAa,WAGjBd,EAAAA,EAAAA,KAACZ,EAAAA,GAAM,CAACuB,KAAK,SAASI,SAAUlB,EAAUK,SAAC,kBAKrC,ECxDhB,EAHiBc,KACRhB,EAAAA,EAAAA,KAACN,EAAY,G","sources":["components/AddContact/AddContact.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const FormField = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  padding: 20px 0;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: #000;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 12px 12px;\n  margin-bottom: 20px;\n  margin-top: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n\n  padding: 12px 12px;\n  margin-bottom: 20px;\n\n  font-weight: 700;\n  font-size: 20px;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 8px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Label = styled.label`\n  box-sizing: border-box;\n  display: block;\n\n  font-size: 16px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  width: 20vw;\n  margin-bottom: 20px;\n\n  &:last-of-type {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  width: 100%;\n  height: 40px;\n  margin-top: 10px;\n  padding-left: 12px;\n  padding-right: 12px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  outline: transparent;\n  font-size: 16px;\n\n  transition-property: border-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import { Form, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { registerUser } from '../../redux/user/operations';\nimport { selectIsLoading } from '../../redux/user/selectors';\n\nimport { Container } from 'components/AppBar/AppBar.styled';\nimport { AddBtn } from 'components/AddContact/AddContact.styled';\nimport { Input, Label } from './RegisterForm.styled';\n\nconst initialValues = {\n  name: '',\n  password: '',\n  email: '',\n};\n\nconst RegisterForm = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const handleSubmit = ({ name, password, email }, actions) => {\n    dispatch(registerUser({ name, email, password }));\n    actions.resetForm();\n  };\n  return (\n    <Container>\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n        <Form>\n          <Label>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"Enter your email\"\n              autoComplete=\"on\"\n            />\n          </Label>\n          <Label>\n            Login\n            <Input\n              type=\"text\"\n              name=\"name\"\n              required\n              placeholder=\"Enter your login\"\n              autoComplete=\"on\"\n            />\n          </Label>\n          <Label>\n            Password\n            <Input\n              type=\"password\"\n              name=\"password\"\n              required\n              placeholder=\"Enter your password\"\n              autoComplete=\"on\"\n            />\n          </Label>\n          <AddBtn type=\"submit\" disabled={isLoading}>\n            Sign Up\n          </AddBtn>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\nexport default RegisterForm;\n","import RegisterForm from '../components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return <RegisterForm />;\n};\nexport default Register;\n"],"names":["FormField","styled","Form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","FormInput","Field","_templateObject4","Button","button","_templateObject5","AddBtn","_templateObject6","initialValues","name","password","email","RegisterForm","dispatch","useDispatch","isLoading","useSelector","selectIsLoading","_jsx","Container","children","Formik","onSubmit","handleSubmit","_ref","actions","registerUser","resetForm","_jsxs","type","required","placeholder","autoComplete","disabled","Register"],"sourceRoot":""}