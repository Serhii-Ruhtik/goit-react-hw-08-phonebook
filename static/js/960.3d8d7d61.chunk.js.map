{"version":3,"file":"static/js/960.3d8d7d61.chunk.js","mappings":"4OAGO,MAAMA,GAAYC,EAAAA,EAAAA,GAAOC,EAAAA,GAAPD,CAAYE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAOxBC,EAAQJ,EAAAA,EAAOK,MAAKC,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,gHAQpBI,EAAQP,EAAAA,EAAOQ,MAAKC,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,mPAapBO,GAAYV,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAaY,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,mPAazBU,EAASb,EAAAA,EAAOc,OAAMC,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,kpBA8BtBa,EAAShB,EAAAA,EAAOc,OAAMG,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,ykB,8ECvE5B,MAAMC,EAAQJ,EAAAA,EAAOK,MAAKH,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,4NAepBI,GAAQP,EAAAA,EAAAA,GAAOW,EAAAA,GAAPX,CAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uY,0ICLlC,MAAMe,EAAgB,CACpBC,SAAU,GACVC,MAAO,IAGIC,EAAYA,KACvB,MAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACzBC,GAA0BF,EAAAA,EAAAA,IAAYG,EAAAA,IAEtCC,GAAYJ,EAAAA,EAAAA,IAAYK,EAAAA,IAO9B,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAS,CAAAC,UACRF,EAAAA,EAAAA,KAACG,EAAAA,GAAM,CAAChB,cAAeA,EAAeiB,SARpBC,CAAAC,EAAsBC,KAAa,IAAlC,MAAElB,EAAK,SAAED,GAAUkB,EACxCf,GAASiB,EAAAA,EAAAA,IAAU,CAAEnB,QAAOD,cACxBK,GAA0C,OAA5BG,GAChBW,EAAQE,WACV,EAIgEP,UAC5DQ,EAAAA,EAAAA,MAACxC,EAAAA,GAAI,CAAAgC,SAAA,EACHQ,EAAAA,EAAAA,MAACrC,EAAAA,EAAK,CAAA6B,SAAA,CAAC,SAELF,EAAAA,EAAAA,KAACxB,EAAAA,EAAK,CACJmC,KAAK,QACLC,KAAK,QACLC,UAAQ,EACRC,YAAY,mBACZC,aAAa,WAGjBL,EAAAA,EAAAA,MAACrC,EAAAA,EAAK,CAAA6B,SAAA,CAAC,YAELF,EAAAA,EAAAA,KAACxB,EAAAA,EAAK,CACJmC,KAAK,WACLC,KAAK,WACLC,UAAQ,EACRC,YAAY,sBACZC,aAAa,WAGjBf,EAAAA,EAAAA,KAACf,EAAAA,GAAM,CAAC0B,KAAK,SAASK,SAAUlB,EAAUI,SAAC,iBAKrC,EClDhB,EAPce,KAEVjB,EAAAA,EAAAA,KAAAkB,EAAAA,SAAA,CAAAhB,UACEF,EAAAA,EAAAA,KAACV,EAAS,K","sources":["components/AddContact/AddContact.styled.jsx","components/RegisterForm/RegisterForm.styled.jsx","components/LoginForm/LoginForm.js","pages/Login.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const FormField = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  padding: 20px 0;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: #000;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 12px 12px;\n  margin-bottom: 20px;\n  margin-top: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n\n  padding: 12px 12px;\n  margin-bottom: 20px;\n\n  font-weight: 700;\n  font-size: 20px;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 8px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Field } from 'formik';\n\nexport const Label = styled.label`\n  box-sizing: border-box;\n  display: block;\n\n  font-size: 16px;\n  line-height: 1.17;\n  letter-spacing: 0.01em;\n  width: 20vw;\n  margin-bottom: 20px;\n\n  &:last-of-type {\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Input = styled(Field)`\n  display: block;\n  width: 100%;\n  height: 40px;\n  margin-top: 10px;\n  padding-left: 12px;\n  padding-right: 12px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  outline: transparent;\n  font-size: 16px;\n\n  transition-property: border-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import React from 'react';\nimport { Form, Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logInUser } from '../../redux/user/operations';\nimport {\n  selectError,\n  selectIsLoading,\n  selectIsLoggedIn,\n} from '../../redux/user/selectors';\nimport { Container } from 'components/AppBar/AppBar.styled';\nimport { AddBtn } from 'components/AddContact/AddContact.styled';\nimport { Input, Label } from 'components/RegisterForm/RegisterForm.styled';\n\nconst initialValues = {\n  password: '',\n  email: '',\n};\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const isAuthentificationError = useSelector(selectError);\n\n  const isLoading = useSelector(selectIsLoading);\n  const submitHandler = ({ email, password }, actions) => {\n    dispatch(logInUser({ email, password }));\n    if (isLoggedIn && isAuthentificationError === null) {\n      actions.resetForm();\n    }\n  };\n  return (\n    <Container>\n      <Formik initialValues={initialValues} onSubmit={submitHandler}>\n        <Form>\n          <Label>\n            Email\n            <Input\n              type=\"email\"\n              name=\"email\"\n              required\n              placeholder=\"Enter your email\"\n              autoComplete=\"on\"\n            />\n          </Label>\n          <Label>\n            Password\n            <Input\n              type=\"password\"\n              name=\"password\"\n              required\n              placeholder=\"Enter your password\"\n              autoComplete=\"on\"\n            />\n          </Label>\n          <AddBtn type=\"submit\" disabled={isLoading}>\n            Log In\n          </AddBtn>\n        </Form>\n      </Formik>\n    </Container>\n  );\n};\n","import { LoginForm } from '../components/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <>\n      <LoginForm />\n    </>\n  );\n};\nexport default Login;\n"],"names":["FormField","styled","Form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","FormInput","Field","_templateObject4","Button","button","_templateObject5","AddBtn","_templateObject6","initialValues","password","email","LoginForm","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","isAuthentificationError","selectError","isLoading","selectIsLoading","_jsx","Container","children","Formik","onSubmit","submitHandler","_ref","actions","logInUser","resetForm","_jsxs","type","name","required","placeholder","autoComplete","disabled","Login","_Fragment"],"sourceRoot":""}