{"version":3,"file":"static/js/389.8ca3783c.chunk.js","mappings":"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","sources":["components/AddContact/AddContact.styled.jsx","components/IconBtn/IconBtn.styled.jsx","components/IconBtn/IconBtn.js","components/Modal/Modal.styled.jsx","components/Modal/Modal.js","components/Contact/Contact.styled.jsx","components/Contact/Contact.js","redux/contacts/selectors.js","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.js","components/AddContact/AddContact.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const FormField = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  padding: 20px 0;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: #000;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 12px 12px;\n  margin-bottom: 20px;\n  margin-top: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n\n  padding: 12px 12px;\n  margin-bottom: 20px;\n\n  font-weight: 700;\n  font-size: 20px;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 8px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const CloseBtn = styled.button`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n\n  width: 30px;\n  height: 30px;\n\n  border: transparent;\n  border-radius: 50%;\n  background-color: #fff;\n  color: #757575;\n\n  padding: 0;\n\n  transition-property: color, background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #188ce8;\n  }\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { CloseBtn } from './IconBtn.styled';\n\nexport default function IconBtn({ children, onClick }) {\n  return (\n    <CloseBtn className=\"btn\" type=\"button\" onClick={onClick}>\n      {children}\n    </CloseBtn>\n  );\n}\n\nIconBtn.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconBtn.propTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n};\n","import styled from '@emotion/styled';\n\nimport Backdrop from '@mui/material/Backdrop';\n\nexport const BackdropOver = styled(Backdrop)`\n  overflow: auto;\n`;\n\nexport const ModalPaper = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n\n  width: 30vw;\n  height: 40vh;\n  max-height: 500px;\n\n  padding: 40px;\n  overflow-y: auto;\n\n  background-color: #fff;\n  box-shadow: 0px 1px 3px rgba(0, 0, 0, 0.12), 0px 1px 1px rgba(0, 0, 0, 0.14),\n    0px 2px 1px rgba(0, 0, 0, 0.2);\n  border-radius: 4px;\n\n  transform: translate(-50%, -50%) scale(1);\n  transition-property: transform;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n`;\n","import React, { useCallback, useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport {\n  clearAllBodyScrollLocks,\n  disableBodyScroll,\n  enableBodyScroll,\n} from 'body-scroll-lock';\nimport { AiOutlineCloseCircle } from 'react-icons/ai';\n\nimport IconBtn from '../IconBtn/IconBtn';\nimport { BackdropOver, ModalPaper } from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const ModalWindow = ({ children, onClose }) => {\n  const modalRef = useRef();\n\n  const closeModal = useCallback(() => {\n    enableBodyScroll(modalRef.current);\n    onClose();\n  }, [onClose]);\n\n  const onBackdropClickHandler = event => {\n    if (event.target === event.currentTarget) {\n      closeModal();\n    }\n  };\n\n  useEffect(() => {\n    const onEscHandler = event => {\n      if (event.code === 'Escape') {\n        closeModal();\n      }\n    };\n\n    window.addEventListener('keydown', onEscHandler);\n    return () => window.removeEventListener('keydown', onEscHandler);\n  }, [closeModal]);\n\n  useEffect(() => {\n    disableBodyScroll(modalRef.current);\n\n    return () => clearAllBodyScrollLocks();\n  }, []);\n\n  return createPortal(\n    <BackdropOver open={true} onClick={onBackdropClickHandler} ref={modalRef}>\n      <ModalPaper>\n        <IconBtn onClick={closeModal}>\n          <AiOutlineCloseCircle size=\"30px\" />\n        </IconBtn>\n        {children}\n      </ModalPaper>\n    </BackdropOver>,\n    modalRoot\n  );\n};\n\nModalWindow.propTypes = {\n  children: PropTypes.node,\n  onClose: PropTypes.func,\n};\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: #000;\n`;\n\nexport const Name = styled.span`\n  margin-right: auto;\n`;\n\nexport const Number = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 400px;\n  font-weight: 400;\n`;\n\nexport const TextField = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 65%;\n`;\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 12px 12px;\n  max-width: 160px;\n  margin: 50px auto 0 auto;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.88;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const OptionButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 8px 40px;\n  max-width: 160px;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.88;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n","import React, { useReducer, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport {\n  changeContactData,\n  deleteContact,\n} from '../../redux/contacts/operations';\nimport { ModalWindow } from 'components/Modal/Modal';\n\nimport {\n  BtnsWrapper,\n  ListItem,\n  Name,\n  Number,\n  TextField,\n  Button,\n  OptionButton,\n} from './Contact.styled';\nimport { FormInput, Label, FormField } from '../AddContact/AddContact.styled';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'name':\n      return { ...state, name: action.payload };\n    case 'number':\n      return { ...state, number: action.payload };\n    default:\n      return state;\n  }\n}\n\nconst Contact = ({ id, name, number }) => {\n  const initialValues = { name, number };\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [state, dispatch] = useReducer(reducer, initialValues);\n  const dispatchOperator = useDispatch();\n\n  const handleDelete = () => {\n    setIsLoading(true);\n    dispatchOperator(deleteContact(id));\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleChange = event => {\n    dispatch({ type: event.target.name, payload: event.target.value });\n  };\n\n  const handleSubmit = (_, action) => {\n    dispatchOperator(\n      changeContactData({ name: state.name, number: state.number, id })\n    );\n    action.resetForm();\n    closeModal();\n  };\n\n  return (\n    <ListItem id={id}>\n      <TextField>\n        <Name> {name} </Name> <Number> {number}</Number>\n      </TextField>\n      <BtnsWrapper>\n        <OptionButton variant=\"contained\" type=\"button\" onClick={openModal}>\n          Edit\n        </OptionButton>\n        <OptionButton type=\"button\" onClick={handleDelete} disabled={isLoading}>\n          {isLoading ? 'Deleting...' : 'Delete'}\n        </OptionButton>\n      </BtnsWrapper>\n      {isOpen && (\n        <ModalWindow onClose={closeModal}>\n          <Formik initialValues={state} onSubmit={handleSubmit}>\n            <FormField>\n              <Label>\n                Name\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n                  placeholder=\"Enter name\"\n                  value={state.name}\n                  onChange={handleChange}\n                />\n              </Label>\n              <Label>\n                Number\n                <FormInput\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                  placeholder=\"Enter number. For example: 098-084-68-40\"\n                  value={state.number}\n                  onChange={handleChange}\n                />\n              </Label>\n              <Button type=\"submit\">Save changes</Button>\n            </FormField>\n          </Formik>\n        </ModalWindow>\n      )}\n    </ListItem>\n  );\n};\n\nexport default Contact;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectErrorValue = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    const visibleContacts = contacts.items.filter(item => {\n      const itemName = item.name.toLowerCase();\n      return itemName.includes(filterValue);\n    });\n\n    return visibleContacts;\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  margin-top: 30px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 16px;\n  width: 100%;\n  padding: 24px 12px;\n  border: 1px solid #eee;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Contact from '../Contact/Contact';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nimport { ContactsList } from '../ContactList/ContactsList.styled';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </ContactsList>\n  );\n};\nexport default ContactList;\n","import React from 'react';\nimport { useState } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { Button } from './AddContact.styled';\n\nimport { ModalWindow } from 'components/Modal/Modal';\nimport { FormInput, Label, FormField, AddBtn } from './AddContact.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst AddContact = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const { items: contactsList } = useSelector(selectContacts);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleSubmit = ({ name, number }, actions) => {\n    const check = contactsList.find(contact => contact.name === name.trim());\n\n    if (check) {\n      toast.warn(`${name} is already in contacts.`, {\n        autoClose: 3000,\n        theme: 'dark',\n      });\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    actions.resetForm();\n    closeModal();\n  };\n\n  return (\n    <>\n      <AddBtn Button type=\"button\" onClick={openModal}>\n        <AiOutlineUserAdd />\n        Add contact\n      </AddBtn>\n      {isOpen && (\n        <ModalWindow onClose={closeModal}>\n          <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n            <FormField>\n              <Label>\n                Name\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n                  placeholder=\"Enter name\"\n                />\n              </Label>\n              <Label>\n                Number\n                <FormInput\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                  placeholder=\"Enter number. For example: 098-084-68-40\"\n                />\n              </Label>\n              <Button type=\"submit\">Add new contact</Button>\n            </FormField>\n          </Formik>\n        </ModalWindow>\n      )}\n    </>\n  );\n};\n\nexport default AddContact;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  margin-top: 24px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/filterSlice';\n\nimport { Label, Input } from 'components/AddContact/AddContact.styled';\nimport { Wrapper } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const changeHandler = event => {\n    dispatch(filterContact(event.currentTarget.value.toLowerCase()));\n  };\n  return (\n    <Wrapper>\n      <Label>\n        Find contacts by name:\n        <Input type=\"text\" onChange={changeHandler} />\n      </Label>\n    </Wrapper>\n  );\n};\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { Oval } from 'react-loader-spinner';\n\nimport ContactList from '../components/ContactList/ContactList';\nimport AddContact from '../components/AddContact/AddContact';\nimport Filter from '../components/Filter/Filter';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectErrorValue, selectIsLoading } from '../redux/contacts/selectors';\n\nimport css from '../components/App/App.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Contacts = () => {\n  const error = useSelector(selectErrorValue);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <AddContact />\n      <p className={css.sectionHeading}>Contacts</p>\n      <Filter />\n      <ContactList />\n      {isLoading && !error && (\n        <Oval\n          ariaLabel=\"loading-indicator\"\n          height={100}\n          width={100}\n          strokeWidth={5}\n          strokeWidthSecondary={1}\n          color=\"blue\"\n          secondaryColor=\"white\"\n          wrapperStyle={{ display: 'flex', justifyContent: 'center' }}\n        />\n      )}\n      <ToastContainer />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["FormField","styled","Form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","FormInput","Field","_templateObject4","Button","button","_templateObject5","AddBtn","_templateObject6","CloseBtn","IconBtn","_ref","children","onClick","_jsx","className","type","defaultProps","BackdropOver","Backdrop","ModalPaper","div","modalRoot","document","querySelector","ModalWindow","onClose","modalRef","useRef","closeModal","useCallback","enableBodyScroll","current","useEffect","onEscHandler","event","code","window","addEventListener","removeEventListener","disableBodyScroll","clearAllBodyScrollLocks","createPortal","open","target","currentTarget","ref","_jsxs","AiOutlineCloseCircle","size","ListItem","li","Name","span","Number","TextField","BtnsWrapper","OptionButton","_templateObject7","reducer","state","action","name","payload","number","id","initialValues","isLoading","setIsLoading","useState","isOpen","setIsOpen","dispatch","useReducer","dispatchOperator","useDispatch","handleChange","value","variant","openModal","handleDelete","deleteContact","disabled","Formik","onSubmit","handleSubmit","_","changeContactData","resetForm","pattern","title","required","placeholder","onChange","selectContacts","contacts","selectIsLoading","selectErrorValue","error","selectVisibleContacts","createSelector","filter","filterValue","items","item","toLowerCase","includes","ContactsList","ul","ContactList","visibleContacts","useSelector","map","Contact","AddContact","contactsList","_Fragment","AiOutlineUserAdd","actions","find","contact","trim","toast","warn","concat","autoClose","theme","addContact","Wrapper","Filter","filterContact","Contacts","fetchContacts","css","container","sectionHeading","Oval","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","wrapperStyle","display","justifyContent","ToastContainer"],"sourceRoot":""}