{"version":3,"file":"static/js/870.a2b6ed96.chunk.js","mappings":"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","sources":["components/AddContact/AddContact.styled.jsx","webpack://react-homework-template/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.js","components/Contact/Contact.styled.jsx","components/Contact/Contact.js","redux/contacts/selectors.js","components/ContactList/ContactsList.styled.jsx","components/ContactList/ContactList.js","components/AddContact/AddContact.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const FormField = styled(Form)`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  padding: 20px 0;\n`;\n\nexport const Label = styled.label`\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: #000;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const FormInput = styled(Field)`\n  box-sizing: border-box;\n  width: 100%;\n  height: 40px;\n  padding-left: 18px;\n  padding-right: 18px;\n  border-radius: 4px;\n  border: 1px solid;\n  border-color: rgba(33, 33, 33, 0.2);\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 12px 12px;\n  margin-bottom: 20px;\n  margin-top: 50px;\n  margin-left: auto;\n  margin-right: auto;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.88;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const AddBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 10px;\n\n  padding: 12px 12px;\n  margin-bottom: 20px;\n\n  font-weight: 700;\n  font-size: 20px;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 8px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n","// extracted by mini-css-extract-plugin\nexport default {\"Modal__backdrop\":\"Modal_Modal__backdrop__3hScK\",\"Modal__content\":\"Modal_Modal__content__We2Js\"};","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\n\nimport styles from '../Modal/Modal.module.css';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ onClose, children }) => {\n  const handleBackdropClick = event => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        console.log('натиснули esc');\n        onClose();\n      }\n    };\n    console.log('modal componentDidMount');\n\n    window.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      console.log('modal componentWillUnmount');\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [onClose]);\n\n  return createPortal(\n    <div className={styles.Modal__backdrop} onClick={handleBackdropClick}>\n      <div className={styles.Modal__content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n};\nexport default Modal;\n","import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1.5;\n  color: #000;\n`;\n\nexport const Name = styled.span`\n  margin-right: auto;\n`;\n\nexport const Number = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  width: 400px;\n  font-weight: 400;\n`;\n\nexport const TextField = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 65%;\n`;\n\nexport const BtnsWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 20px;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 12px 12px;\n  max-width: 160px;\n  margin: 50px auto 0 auto;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.88;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n\nexport const OptionButton = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  padding: 8px 40px;\n  max-width: 160px;\n\n  font-weight: 500;\n  font-size: 16px;\n  line-height: 1.88;\n  text-align: center;\n  letter-spacing: 0.06em;\n  background-color: #2196f3;\n  color: #fff;\n  cursor: pointer;\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\n  border-radius: 4px;\n  border-color: transparent;\n  transition-property: background-color;\n  transition-duration: 250ms;\n  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    background-color: #188ce8;\n  }\n`;\n","import React, { useReducer, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\n\nimport {\n  changeContactData,\n  deleteContact,\n} from '../../redux/contacts/operations';\nimport ModalWindow from '../Modal/Modal';\n\nimport {\n  BtnsWrapper,\n  ListItem,\n  Name,\n  Number,\n  TextField,\n  Button,\n  OptionButton,\n} from './Contact.styled';\nimport { FormInput, Label, FormField } from '../AddContact/AddContact.styled';\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'name':\n      return { ...state, name: action.payload };\n    case 'number':\n      return { ...state, number: action.payload };\n    default:\n      return state;\n  }\n}\n\nconst Contact = ({ id, name, number }) => {\n  const initialValues = { name, number };\n  const [isLoading, setIsLoading] = useState(false);\n  const [isOpen, setIsOpen] = useState(false);\n  const [state, dispatch] = useReducer(reducer, initialValues);\n  const dispatchOperator = useDispatch();\n\n  const handleDelete = () => {\n    setIsLoading(true);\n    dispatchOperator(deleteContact(id));\n  };\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleChange = event => {\n    dispatch({ type: event.target.name, payload: event.target.value });\n  };\n\n  const handleSubmit = (_, action) => {\n    dispatchOperator(\n      changeContactData({ name: state.name, number: state.number, id })\n    );\n    action.resetForm();\n    closeModal();\n  };\n\n  return (\n    <ListItem id={id}>\n      <TextField>\n        <Name> {name} </Name> <Number> {number}</Number>\n      </TextField>\n      <BtnsWrapper>\n        <OptionButton variant=\"contained\" type=\"button\" onClick={openModal}>\n          Edit\n        </OptionButton>\n        <OptionButton type=\"button\" onClick={handleDelete} disabled={isLoading}>\n          {isLoading ? 'Deleting...' : 'Delete'}\n        </OptionButton>\n      </BtnsWrapper>\n      {isOpen && (\n        <ModalWindow onClose={closeModal}>\n          <Formik initialValues={state} onSubmit={handleSubmit}>\n            <FormField>\n              <Label>\n                Name\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n                  placeholder=\"Enter name\"\n                  value={state.name}\n                  onChange={handleChange}\n                />\n              </Label>\n              <Label>\n                Number\n                <FormInput\n                  type=\"tel\"\n                  name=\"number\"\n                  pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                  placeholder=\"Enter number. For example: 098-084-68-40\"\n                  value={state.number}\n                  onChange={handleChange}\n                />\n              </Label>\n              <Button type=\"submit\">Save changes</Button>\n            </FormField>\n          </Formik>\n        </ModalWindow>\n      )}\n    </ListItem>\n  );\n};\n\nexport default Contact;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts;\n\nexport const selectFilterValue = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectErrorValue = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterValue],\n  (contacts, filterValue) => {\n    const visibleContacts = contacts.items.filter(item => {\n      const itemName = item.name.toLowerCase();\n      return itemName.includes(filterValue);\n    });\n\n    return visibleContacts;\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  margin-top: 30px;\n  box-sizing: border-box;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  gap: 16px;\n  width: 100%;\n  padding: 24px 12px;\n  border: 1px solid #eee;\n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport Contact from '../Contact/Contact';\nimport { selectVisibleContacts } from '../../redux/contacts/selectors';\n\nimport { ContactsList } from '../ContactList/ContactsList.styled';\n\nconst ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ id, name, number }) => {\n        return <Contact key={id} id={id} name={name} number={number} />;\n      })}\n    </ContactsList>\n  );\n};\nexport default ContactList;\n","import React from 'react';\nimport { useState } from 'react';\nimport { Formik } from 'formik';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { AiOutlineUserAdd } from 'react-icons/ai';\n\nimport { selectContacts } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\n\nimport { Button } from './AddContact.styled';\n\nimport ModalWindow from '../Modal/Modal';\nimport { FormInput, Label, FormField, AddBtn } from './AddContact.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nconst AddContact = () => {\n  const [isOpen, setIsOpen] = useState(false);\n  const dispatch = useDispatch();\n  const { items: contactsList } = useSelector(selectContacts);\n\n  const openModal = () => {\n    setIsOpen(true);\n  };\n\n  const closeModal = () => {\n    setIsOpen(false);\n  };\n\n  const handleSubmit = ({ name, number }, actions) => {\n    const check = contactsList.find(contact => contact.name === name.trim());\n\n    if (check) {\n      toast.warn(`${name} is already in contacts.`, {\n        autoClose: 3000,\n        theme: 'dark',\n      });\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    actions.resetForm();\n    closeModal();\n  };\n\n  return (\n    <>\n      <AddBtn Button type=\"button\" onClick={openModal}>\n        <AiOutlineUserAdd />\n        Add contact\n      </AddBtn>\n      {isOpen && (\n        <ModalWindow onClose={closeModal}>\n          <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n            <FormField>\n              <Label>\n                Name\n                <FormInput\n                  type=\"text\"\n                  name=\"name\"\n                  // pattern=\"^[a-zA-Zа-яА-Я]+([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*$\"\n                  title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                  required\n                  placeholder=\"Enter name\"\n                />\n              </Label>\n              <Label>\n                Number\n                <FormInput\n                  type=\"tel\"\n                  name=\"number\"\n                  // pattern=\"\\+?\\d{1,4}[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                  title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                  required\n                  placeholder=\"Enter number. For example: 098-084-68-40\"\n                />\n              </Label>\n              <Button type=\"submit\">Add new contact</Button>\n            </FormField>\n          </Formik>\n        </ModalWindow>\n      )}\n    </>\n  );\n};\n\nexport default AddContact;\n","import styled from '@emotion/styled';\n\nexport const Wrapper = styled.div`\n  margin-top: 24px;\n`;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { filterContact } from '../../redux/contacts/filterSlice';\n\nimport { Label, Input } from 'components/AddContact/AddContact.styled';\nimport { Wrapper } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const changeHandler = event => {\n    dispatch(filterContact(event.currentTarget.value.toLowerCase()));\n  };\n  return (\n    <Wrapper>\n      <Label>\n        Find contacts by name:\n        <Input type=\"text\" onChange={changeHandler} />\n      </Label>\n    </Wrapper>\n  );\n};\nexport default Filter;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { Oval } from 'react-loader-spinner';\n\nimport ContactList from '../components/ContactList/ContactList';\nimport AddContact from '../components/AddContact/AddContact';\nimport Filter from '../components/Filter/Filter';\n\nimport { fetchContacts } from '../redux/contacts/operations';\nimport { selectErrorValue, selectIsLoading } from '../redux/contacts/selectors';\n\nimport css from '../components/App/App.module.css';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Contacts = () => {\n  const error = useSelector(selectErrorValue);\n  const isLoading = useSelector(selectIsLoading);\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.container}>\n      <AddContact />\n      <p className={css.sectionHeading}>Contacts</p>\n      <Filter />\n      <ContactList />\n      {isLoading && !error && (\n        <Oval\n          ariaLabel=\"loading-indicator\"\n          height={100}\n          width={100}\n          strokeWidth={5}\n          strokeWidthSecondary={1}\n          color=\"blue\"\n          secondaryColor=\"white\"\n          wrapperStyle={{ display: 'flex', justifyContent: 'center' }}\n        />\n      )}\n      <ToastContainer />\n    </div>\n  );\n};\nexport default Contacts;\n"],"names":["FormField","styled","Form","_templateObject","_taggedTemplateLiteral","Label","label","_templateObject2","Input","input","_templateObject3","FormInput","Field","_templateObject4","Button","button","_templateObject5","AddBtn","_templateObject6","modalRoot","document","querySelector","_ref","onClose","children","useEffect","handleKeyDown","e","code","console","log","window","addEventListener","removeEventListener","createPortal","_jsx","className","styles","onClick","event","currentTarget","target","ListItem","li","Name","span","Number","TextField","BtnsWrapper","div","OptionButton","_templateObject7","reducer","state","action","type","name","payload","number","id","initialValues","isLoading","setIsLoading","useState","isOpen","setIsOpen","dispatch","useReducer","dispatchOperator","useDispatch","closeModal","handleChange","value","_jsxs","variant","openModal","handleDelete","deleteContact","disabled","ModalWindow","Formik","onSubmit","handleSubmit","_","changeContactData","resetForm","pattern","title","required","placeholder","onChange","selectContacts","contacts","selectIsLoading","selectErrorValue","error","selectVisibleContacts","createSelector","filter","filterValue","items","item","toLowerCase","includes","ContactsList","ul","ContactList","visibleContacts","useSelector","map","Contact","AddContact","contactsList","_Fragment","AiOutlineUserAdd","actions","find","contact","trim","toast","warn","concat","autoClose","theme","addContact","Wrapper","Filter","filterContact","Contacts","fetchContacts","css","container","sectionHeading","Oval","ariaLabel","height","width","strokeWidth","strokeWidthSecondary","color","secondaryColor","wrapperStyle","display","justifyContent","ToastContainer"],"sourceRoot":""}